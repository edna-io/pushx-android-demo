
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.huawei.agconnect'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id "io.github.solneo.dependency-conflict-analyzer" version "1.0.2"
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 23
        targetSdk 33
        applicationId "com.edna.android.push.demo_x"
        versionCode 1
        versionName "1.0"
        manifestPlaceholders.edna_app_id = "enter your tenant"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debugRegressionStend {
            manifestPlaceholders = [edna_app_id: "eyJ0ZW5hbnRVdWlkIjoiYjY3OGFiZDMtMjA5NS00ZDNmLWJmYWYtNGMxM2E3ZGM1MTU5IiwicHJvdmlkZXJVaWQiOiJZMjl0TG1Wa2JtRXVZVzVrY205cFpDNXdkWE5vTG1SbGJXOWZlRjlpTmpjNFlXSmtNeTB5TURrMUxUUmtNMll0WW1aaFppMDBZekV6WVRka1l6VXhOVGs9In0="]
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "init", "inheritance"

    productFlavors {
        autoInit {
            dimension "init"
            versionNameSuffix "-auto"
        }
        manualInit {
            dimension "init"
            versionNameSuffix "-manual"
        }
        manualInitWithEdnaId {
            dimension "init"
            versionNameSuffix "-manualWithId"
        }
        withoutInheritance {
            dimension "inheritance"
            versionNameSuffix "-inheritance"
        }
        withInheritance {
            dimension "inheritance"
            versionNameSuffix "-inheritance"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kapt {
        generateStubs = true
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$kotlinCoreVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    releaseImplementation platform("com.edna.android:push-x-bom:2.3.0")
    releaseImplementation "com.edna.android:push-lite-huawei-release"
    releaseImplementation "com.edna.android:push-lite-rustore-release"

    debugImplementation platform("com.edna.android:push-x-bom-debug:2.3.0")
    debugImplementation "com.edna.android:push-lite-huawei-debug"
    debugImplementation "com.edna.android:push-lite-rustore-debug"

    debugRegressionStendImplementation platform("com.edna.android:push-x-bom-debug-regression:2.3.0")
    debugRegressionStendImplementation "com.edna.android:push-lite-huawei-debug"
    debugRegressionStendImplementation "com.edna.android:push-lite-rustore-debug"
    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "ru.tinkoff.decoro:decoro:$decoroVersion"

    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.startup:startup-runtime:$startupRuntimeVersion"

    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}
